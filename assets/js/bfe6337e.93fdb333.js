"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[9364],{90841:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=s(85893),t=s(11151);const i={sidebar_position:5},o="FAQ",a={id:"docs/get_started/faq",title:"FAQ",description:"Learn more about SuperDuperDB.",source:"@site/content/docs/get_started/faq.md",sourceDirName:"docs/get_started",slug:"/docs/get_started/faq",permalink:"/docs/docs/get_started/faq",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/get_started/faq.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Security",permalink:"/docs/docs/get_started/security"},next:{title:"Glossary",permalink:"/docs/docs/fundamentals/glossary"}},d={},l=[];function c(e){const n={h1:"h1",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,r.jsx)(n.p,{children:"Learn more about SuperDuperDB."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"What's the difference between SuperDuperDB and MindsDB?"}),(0,r.jsx)(n.p,{children:"The main differences between SuperDuperDB and MindsDB are outlined below:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Developer Experience:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MindsDB:"})," Requires learning a new language created by MindsDB."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SuperDuperDB:"})," Only requires proficiency in Python and familiar database query languages/operators."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Integration with Python Ecosystem:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MindsDB:"})," Utilizes a cloaked connection between data sources and Python models."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SuperDuperDB:"})," Offers full transparency in the notebook, allowing for granular output inspection, debugging, and visualization within known Python environments and tools."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Vector Search:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MindsDB:"})," Does not support native vector embedding, resulting in no vector search capability."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SuperDuperDB:"})," Supports vectors in any format, including raw, and integrates various vector search solutions."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Support for Flexible Data Types:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MindsDB:"})," Limited to handling text and numbers only."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SuperDuperDB:"})," Supports any datatype, providing flexibility in managing diverse data types."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Multi-Tenant (Multi Data Store):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MindsDB:"})," Does not separate data source, model registry, and metadata."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SuperDuperDB:"})," Allows different locations for data stores, models, and metadata, facilitating multi-data store setups that can share the same models."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Bringing Your Own Models:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MindsDB:"})," Requires rewriting and reorganization of your model when bringing your own models."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SuperDuperDB:"})," Enables the use of your framework natively without requiring any adaptation when bringing your own models."]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Is SuperDuperDB a database?"}),(0,r.jsx)(n.p,{children:"No, SuperDuperDB is not a traditional standalone database. Instead, it is a versatile Python framework or tool designed to seamlessly integrate artificial intelligence capabilities into various databases. It supports a wide range of databases, including but not limited to MongoDB, MySQL, Postgres, and more. The focus is on enhancing database functionality with AI features rather than serving as a standalone database solution."})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Is SuperDuperDB a vector-database?"}),(0,r.jsx)(n.p,{children:"No, SuperDuperDB is not a vector-database. It is a versatile Python framework that excels in bringing AI into your favorite database."})]})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>o});var r=s(67294);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);