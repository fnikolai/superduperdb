"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5996],{1920:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=t(4848),a=t(8453),s=t(9489),o=t(7227),l=t(94);const i={sidebar_label:"Transfer learning",filename:"transfer_learning.md"},d="Transfer learning",c={id:"use_cases/transfer_learning",title:"transfer_learning",description:"Configure your production system",source:"@site/content/use_cases/transfer_learning.md",sourceDirName:"use_cases",slug:"/use_cases/transfer_learning",permalink:"/docs/use_cases/transfer_learning",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/use_cases/transfer_learning.md",tags:[],version:"current",frontMatter:{sidebar_label:"Transfer learning",filename:"transfer_learning.md"},sidebar:"tutorialSidebar",previous:{title:"Retrieval augmented generation",permalink:"/docs/use_cases/retrieval_augmented_generation"}},u={},p=[{value:"Configure your production system",id:"configure-your-production-system",level:2},{value:"Start your cluster",id:"start-your-cluster",level:2},{value:"Connect to SuperDuperDB",id:"connect-to-superduperdb",level:2},{value:"Get useful sample data",id:"get-useful-sample-data",level:2},{value:"Setup tables or collections",id:"setup-tables-or-collections",level:2},{value:"Insert data",id:"insert-data",level:2},{value:"Compute features",id:"compute-features",level:2},{value:"Choose input key from listener outputs",id:"choose-input-key-from-listener-outputs",level:2},{value:"Build and train classifier",id:"build-and-train-classifier",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"transfer-learning",children:"Transfer learning"}),"\n",(0,r.jsx)(n.h2,{id:"configure-your-production-system",children:"Configure your production system"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:'If you would like to use the production features\nof SuperDuperDB, then you should set the relevant\nconnections and configurations in a configuration\nfile. Otherwise you are welcome to use "development" mode\nto get going with SuperDuperDB quickly.'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import os\n\nos.makedirs('.superduperdb', exist_ok=True)\nos.environ['SUPERDUPERDB_CONFIG'] = '.superduperdb/config.yaml'\n"})}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"MongoDB Community",label:"MongoDB Community",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\ndata_backend: mongodb://127.0.0.1:27017/documents\nartifact_store: filesystem://./artifact_store\ncluster:\n  cdc:\n    strategy: null\n    uri: ray://127.0.0.1:20000\n  compute:\n    uri: ray://127.0.0.1:10001\n  vector_search:\n    backfill_batch_size: 100\n    type: in_memory\n    uri: http://127.0.0.1:21000\n'''        \n"})})}),(0,r.jsx)(o.A,{value:"MongoDB Atlas",label:"MongoDB Atlas",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\nartifact_store: filesystem://<path-to-artifact-store>\ncluster: \n    compute: ray://<ray-host>\n    cdc:    \n        uri: http://<cdc-host>:<cdc-port>\n    vector_search:\n        uri: http://<vector-search-host>:<vector-search-port>\n        type: native\ndatabackend: mongodb+srv://<user>:<password>@<mongo-host>:27017/documents\n'''        \n"})})}),(0,r.jsx)(o.A,{value:"SQLite",label:"SQLite",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\nartifact_store: filesystem://<path-to-artifact-store>\ncluster: \n    compute: ray://<ray-host>\n    cdc:    \n        uri: http://<cdc-host>:<cdc-port>\n    vector_search:\n        uri: http://<vector-search-host>:<vector-search-port>\ndatabackend: sqlite://<path-to-db>.db\n'''        \n"})})}),(0,r.jsx)(o.A,{value:"MySQL",label:"MySQL",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\nartifact_store: filesystem://<path-to-artifact-store>\ncluster: \n    compute: ray://<ray-host>\n    cdc:    \n        uri: http://<cdc-host>:<cdc-port>\n    vector_search:\n        uri: http://<vector-search-host>:<vector-search-port>\ndatabackend: mysql://<user>:<password>@<host>:<port>/database\n'''        \n"})})}),(0,r.jsx)(o.A,{value:"Oracle",label:"Oracle",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\nartifact_store: filesystem://<path-to-artifact-store>\ncluster: \n    compute: ray://<ray-host>\n    cdc:    \n        uri: http://<cdc-host>:<cdc-port>\n    vector_search:\n        uri: http://<vector-search-host>:<vector-search-port>\ndatabackend: mssql://<user>:<password>@<host>:<port>\n'''        \n"})})}),(0,r.jsx)(o.A,{value:"PostgreSQL",label:"PostgreSQL",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\nartifact_store: filesystem://<path-to-artifact-store>\ncluster: \n    compute: ray://<ray-host>\n    cdc:    \n        uri: http://<cdc-host>:<cdc-port>\n    vector_search:\n        uri: http://<vector-search-host>:<vector-search-port>\ndatabackend: postgres://<user>:<password>@<host>:<port</<database>\n'''        \n"})})}),(0,r.jsx)(o.A,{value:"Snowflake",label:"Snowflake",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\nartifact_store: filesystem://<path-to-artifact-store>\nmetadata_store: sqlite://<path-to-sqlite-db>.db\ncluster: \n    compute: ray://<ray-host>\n    cdc:    \n        uri: http://<cdc-host>:<cdc-port>\n    vector_search:\n        uri: http://<vector-search-host>:<vector-search-port>\ndatabackend: snowflake://<user>:<password>@<account>/<database>\n'''        \n"})})}),(0,r.jsx)(o.A,{value:"Clickhouse",label:"Clickhouse",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"CFG = '''\nartifact_store: filesystem://<path-to-artifact-store>\nmetadata_store: sqlite://<path-to-sqlite-db>.db\ncluster: \n    compute: ray://<ray-host>\n    cdc:    \n        uri: http://<cdc-host>:<cdc-port>\n    vector_search:\n        uri: http://<vector-search-host>:<vector-search-port>\ndatabackend: clickhouse://<user>:<password>@<host>:<port>\n'''        \n"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"with open(os.environ['SUPERDUPERDB_CONFIG'], 'w') as f:\n    f.write(CFG)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"start-your-cluster",children:"Start your cluster"}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"Starting a SuperDuperDB cluster is useful in production and model development\nif you want to enable scalable compute, access to the models by multiple users for collaboration,\nmonitoring."}),(0,r.jsx)(n.p,{children:"If you don't need this, then it is simpler to start in development mode."})]}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"Experimental Cluster",label:"Experimental Cluster",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"!python -m superduperdb local-cluster up        \n"})})}),(0,r.jsx)(o.A,{value:"Docker-Compose",label:"Docker-Compose",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"!make build_sandbox\n!make testenv_init        \n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"connect-to-superduperdb",children:"Connect to SuperDuperDB"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:'Note that this is only relevant if you are running SuperDuperDB in development mode.\nOtherwise refer to "Configuring your production system".'})}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"MongoDB",label:"MongoDB",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\n\ndb = superduper('mongodb://localhost:27017/documents')        \n"})})}),(0,r.jsx)(o.A,{value:"SQLite",label:"SQLite",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\ndb = superduper('sqlite://my_db.db')        \n"})})}),(0,r.jsx)(o.A,{value:"MySQL",label:"MySQL",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\n\nuser = 'superduper'\npassword = 'superduper'\nport = 3306\nhost = 'localhost'\ndatabase = 'test_db'\n\ndb = superduper(f\"mysql://{user}:{password}@{host}:{port}/{database}\")        \n"})})}),(0,r.jsx)(o.A,{value:"Oracle",label:"Oracle",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\n\nuser = 'sa'\npassword = 'Superduper#1'\nport = 1433\nhost = 'localhost'\n\ndb = superduper(f\"mssql://{user}:{password}@{host}:{port}\")        \n"})})}),(0,r.jsx)(o.A,{value:"PostgreSQL",label:"PostgreSQL",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"!pip install psycopg2\nfrom superduperdb import superduper\n\nuser = 'postgres'\npassword = 'postgres'\nport = 5432\nhost = 'localhost'\ndatabase = 'test_db'\ndb_uri = f\"postgres://{user}:{password}@{host}:{port}/{database}\"\n\ndb = superduper(db_uri, metadata_store=db_uri.replace('postgres://', 'postgresql://'))        \n"})})}),(0,r.jsx)(o.A,{value:"Snowflake",label:"Snowflake",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from superduperdb import superduper\n\nuser = "superduperuser"\npassword = "superduperpassword"\naccount = "XXXX-XXXX"  # ORGANIZATIONID-USERID\ndatabase = "FREE_COMPANY_DATASET/PUBLIC"\n\nsnowflake_uri = f"snowflake://{user}:{password}@{account}/{database}"\n\ndb = superduper(\n    snowflake_uri, \n    metadata_store=\'sqlite:///your_database_name.db\',\n)        \n'})})}),(0,r.jsx)(o.A,{value:"Clickhouse",label:"Clickhouse",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\n\nuser = 'default'\npassword = ''\nport = 8123\nhost = 'localhost'\n\ndb = superduper(f\"clickhouse://{user}:{password}@{host}:{port}\", metadata_store=f'mongomock://meta')        \n"})})}),(0,r.jsx)(o.A,{value:"DuckDB",label:"DuckDB",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\n\ndb = superduper('duckdb://mydb.duckdb')        \n"})})}),(0,r.jsx)(o.A,{value:"Pandas",label:"Pandas",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\n\ndb = superduper(['my.csv'], metadata_store=f'mongomock://meta')        \n"})})}),(0,r.jsx)(o.A,{value:"MongoMock",label:"MongoMock",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper\n\ndb = superduper('mongomock:///test_db')        \n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"get-useful-sample-data",children:"Get useful sample data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb.backends.ibis import dtype\n\n"})}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"labeled_text",label:"Text (Labeled)",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'!curl -O https://superduperdb-public-demo.s3.amazonaws.com/text_classification.json\nimport json\n\nwith open("text_classification.json", "r") as f:\n    data = json.load(f)\nsample_datapoint = data[-1]        \n'})})}),(0,r.jsx)(o.A,{value:"labeled_image",label:"Image (Labeled)",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"!curl -O https://superduperdb-public-demo.s3.amazonaws.com/images_classification.zip && unzip images.zip\nimport json\nfrom PIL import Image\n\nwith open('images/images.json', 'r') as f:\n    data = json.load(f)\n\ndata = [{'x': Image.open(d['image_path']), 'y': d['label']} for d in data]\nsample_datapoint = data[-1]        \n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"setup-tables-or-collections",children:"Setup tables or collections"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"MongoDB",label:"MongoDB",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Note this is an optional step for MongoDB\n# Users can also work directly with `DataType` if they want to add\n# custom data\nfrom superduperdb import Schema, DataType\nfrom superduperdb.backends.mongodb import Collection\n\ntable_or_collection = Collection('documents')\nUSE_SCHEMA = False\n\nif USE_SCHEMA and isinstance(datatype, DataType):\n    schema = Schema(fields={'x': datatype})\n    db.apply(schema)        \n"})})}),(0,r.jsx)(o.A,{value:"SQL",label:"SQL",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from superduperdb.backends.ibis import Table\nfrom superduperdb import Schema, DataType\nfrom superduperdb.backends.ibis.field_types import dtype\n\ndatatype = "str"\n\nif isinstance(datatype, DataType):\n    schema = Schema(identifier="schema", fields={"id": dtype("str"), "x": datatype})\nelse:\n    schema = Schema(\n        identifier="schema", fields={"id": dtype("str"), "x": dtype(datatype)}\n    )\n\ntable_or_collection = Table(\'documents\', schema=schema)\n\ndb.apply(table_or_collection)        \n'})})})]}),"\n",(0,r.jsx)(n.h2,{id:"insert-data",children:"Insert data"}),"\n",(0,r.jsxs)(n.p,{children:["In order to create data, we need to create a ",(0,r.jsx)(n.code,{children:"Schema"})," for encoding our special ",(0,r.jsx)(n.code,{children:"Datatype"})," column(s) in the databackend."]}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"MongoDB",label:"MongoDB",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import Document, DataType\n\ndef do_insert(data, schema = None):\n    \n    if schema is None and (datatype is None or isinstance(datatype, str)):\n        data = [Document({'x': x['x'], 'y': x['y']}) if isinstance(x, dict) and 'x' in x and 'y' in x else Document({'x': x}) for x in data]\n        db.execute(table_or_collection.insert_many(data))\n    elif schema is None and datatype is not None and isinstance(datatype, DataType):\n        data = [Document({'x': datatype(x['x']), 'y': x['y']}) if isinstance(x, dict) and 'x' in x and 'y' in x else Document({'x': datatype(x)}) for x in data]\n        db.execute(table_or_collection.insert_many(data))\n    else:\n        data = [Document({'x': x['x'], 'y': x['y']}) if isinstance(x, dict) and 'x' in x and 'y' in x else Document({'x': x}) for x in data]\n        db.execute(table_or_collection.insert_many(data, schema=schema))\n\n"})})}),(0,r.jsx)(o.A,{value:"SQL",label:"SQL",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb import Document\n\ndef do_insert(data):\n    db.execute(table_or_collection.insert([Document({'id': str(idx), 'x': x['x'], 'y': x['y']}) if isinstance(x, dict) and 'x' in x and 'y' in x else Document({'id': str(idx), 'x': x}) for idx, x in enumerate(data)]))\n\n"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"do_insert(data[:-len(data) // 4])\n"})}),"\n",(0,r.jsx)(n.h2,{id:"compute-features",children:"Compute features"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"Text",label:"Text",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'\nkey = \'txt\'\n\nimport sentence_transformers\nfrom superduperdb import vector, Listener\nfrom superduperdb.ext.sentence_transformers import SentenceTransformer\n\nsuperdupermodel = SentenceTransformer(\n    identifier="embedding",\n    object=sentence_transformers.SentenceTransformer("sentence-transformers/all-MiniLM-L6-v2"),\n    datatype=vector(shape=(384,)),\n    postprocess=lambda x: x.tolist(),\n)\n\njobs, listener = db.apply(\n    Listener(\n        model=superdupermodel,\n        select=select,\n        key=key,\n        identifier="features"\n    )\n)        \n'})})}),(0,r.jsx)(o.A,{value:"Image",label:"Image",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"\nkey = 'image'\n\nimport torchvision.models as models\nfrom torchvision import transforms\nfrom superduperdb.ext.torch import TorchModel\nfrom superduperdb import Listener\nfrom PIL import Image\n\nclass TorchVisionEmbedding:\n    def __init__(self):\n        # Load the pre-trained ResNet-18 model\n        self.resnet = models.resnet18(pretrained=True)\n        \n        # Set the model to evaluation mode\n        self.resnet.eval()\n        \n    def preprocess(self, image_array):\n        # Preprocess the image\n        image = Image.fromarray(image_array.astype(np.uint8))\n        preprocess = preprocess = transforms.Compose([\n            transforms.Resize(256),\n            transforms.CenterCrop(224),\n            transforms.ToTensor(),\n            transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\n        ])\n        tensor_image = preprocess(image)\n        return tensor_image\n        \nmodel = TorchVisionEmbedding()\nsuperdupermodel = TorchModel(identifier='my-vision-model-torch', object=model.resnet, preprocess=model.preprocess, postprocess=lambda x: x.numpy().tolist())\n\njobs, listener = db.apply(\n    Listener(\n        model=superdupermodel,\n        select=select,\n        key=key,\n        identifier=\"features\"\n    )\n)        \n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"choose-input-key-from-listener-outputs",children:"Choose input key from listener outputs"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"This is useful if you have performed a first step, such as pre-computing\nfeatures, or chunking your data. You can use this query to\nchoose the input key for further models such as classification models."})}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"MongoDB",label:"MongoDB",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"input_key = listener.outputs\nselect = table_or_collection.find()        \n"})})}),(0,r.jsx)(o.A,{value:"SQL",label:"SQL",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"input_key = listener.outputs\nselect = table_or_collection.outputs(listener.predict_id).select(target_key, input_key)\n\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"build-and-train-classifier",children:"Build and train classifier"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"Scikit-Learn",label:"Scikit-Learn",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from sklearn.linear_model import LogisticRegression\nfrom superduperdb.ext.sklearn.model import SklearnTrainer, Estimator\n\n# Create a Logistic Regression model\nmodel = LogisticRegression()\nmodel = Estimator(\n    object=model,\n    identifier='my-model',\n    trainer=SklearnTrainer(\n        key=(input_key, 'y'),\n        select=select,\n    )\n)        \n"})})}),(0,r.jsx)(o.A,{value:"Torch",label:"Torch",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from torch import nn\nfrom superduperdb.ext.torch.model import TorchModel\nfrom superduperdb.ext.torch.training import TorchTrainer\n\n\nclass SimpleModel(nn.Module):\n    def __init__(self, input_size=16, hidden_size=32, num_classes=3):\n        super(SimpleModel, self).__init__()\n        self.fc1 = nn.Linear(input_size, hidden_size)\n        self.relu = nn.ReLU()\n        self.fc2 = nn.Linear(hidden_size, num_classes)\n\n    def forward(self, x):\n        out = self.fc1(x)\n        out = self.relu(out)\n        out = self.fc2(out)\n        return out\n\n# Loss function\ndef my_loss(X, y):\n    return torch.nn.functional.binary_cross_entropy_with_logits(\n        X[:, 0], y.type(torch.float)\n    )\n\n\n# Create a Logistic Regression model\nmodel = SimpleModel()\nmodel = TorchModel(\n    identifier='my-model',\n    object=model,         \n    trainer=TorchTrainer(\n        key=(input_key, 'y'),\n        identifier='my_trainer',\n        objective=my_loss,\n        loader_kwargs={'batch_size': 10},\n        max_iterations=100,\n        validation_interval=10,\n        select=select,\n    ),\n)        \n"})})})]}),"\n",(0,r.jsx)(n.p,{children:"The following command adds the model to the system and trains the model in one command."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"db.apply(model)\n"})}),"\n",(0,r.jsx)(l.A,{filename:"transfer_learning.md"})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},94:(e,n,t)=>{t.d(n,{A:()=>o});var r=t(6540);const a=e=>{const n=Array.from(document.querySelectorAll('.tabs > li[role="tab"]')).filter((e=>"true"===e.getAttribute("aria-selected"))).map((e=>e.textContent.trim()));console.log("About to process filename:",e),console.log("Selected tabs:",n);const t=`_${e.replace(/\.md$/,".ipynb")}`,r=encodeURIComponent(t);fetch(`https://build-use-cases-sddb.replit.app/build_notebook?usecase_path=.%2Fuse_cases%2F${r}`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(n)}).then((e=>e.blob())).then((e=>{const n=window.URL.createObjectURL(e),r=document.createElement("a");r.style.display="none",r.href=n,r.download=t,document.body.appendChild(r),r.click(),window.URL.revokeObjectURL(n),alert("Your file has downloaded!")})).catch((()=>alert("There was an error."))),console.log("Sending JSON payload:",JSON.stringify(n))};var s=t(4848);const o=e=>{let{filename:n}=e;if(!n)return console.error("Filename is not provided or invalid."),null;const[t,o]=(0,r.useState)(!1),l={padding:"10px",borderRadius:"10px",border:"0",color:"#000",backgroundColor:"#C4F800",fontWeight:"bold",cursor:"pointer"};return(0,s.jsx)("button",{style:t?{...l,backgroundColor:"#B0E000"}:l,onMouseEnter:()=>o(!0),onMouseLeave:()=>o(!1),onClick:()=>a(n),children:"Generate notebook from all selected tabs"})}},7227:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var r=t(870);const a={tabItem:"tabItem_Ymn6"};var s=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,o),hidden:t,children:n})}},9489:(e,n,t)=>{t.d(n,{A:()=>v});var r=t(6540),a=t(870),s=t(4245),o=t(6347),l=t(6494),i=t(2814),d=t(5167),c=t(1269);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=p(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[d,u]=m({queryString:t,groupId:a}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),x=(()=>{const e=d??f;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{x&&i(x)}),[x]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var b=t(1062);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(4848);function g(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=i.indexOf(n),a=l[t].value;a!==r&&(d(n),o(a))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>i.push(e),onKeyDown:u,onClick:c,...s,className:(0,a.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function _(e){const n=f(e);return(0,y.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,y.jsx)(g,{...e,...n}),(0,y.jsx)(j,{...e,...n})]})}function v(e){const n=(0,b.A)();return(0,y.jsx)(_,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);