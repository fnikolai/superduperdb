"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[9352],{4596:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var r=t(4848),o=t(8453);const s={sidebar_position:5,tags:["quickstart"]},i="Your first superduperdb program",d={id:"docs/get_started/hello_world",title:"Your first superduperdb program",description:"Since vector-search is all-the-rage right now,",source:"@site/content/docs/get_started/hello_world.md",sourceDirName:"docs/get_started",slug:"/docs/get_started/hello_world",permalink:"/docs/docs/get_started/hello_world",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/docs/get_started/hello_world.md",tags:[{label:"quickstart",permalink:"/docs/tags/quickstart"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["quickstart"]},sidebar:"tutorialSidebar",previous:{title:"Environment setup",permalink:"/docs/docs/get_started/environment"},next:{title:"Core SuperDuperDB usage",permalink:"/docs/docs/core_api/intro"}},c={},a=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"your-first-superduperdb-program",children:["Your first ",(0,r.jsx)(n.code,{children:"superduperdb"})," program"]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["Since vector-search is all-the-rage right now,\nhere is the simplest possible iteration of semantic\ntext-search with a ",(0,r.jsx)(n.code,{children:"sentence_transformers"})," model,\nas an entrypoint to ",(0,r.jsx)(n.code,{children:"superduperdb"}),"."]}),(0,r.jsxs)(n.p,{children:["Note that ",(0,r.jsx)(n.code,{children:"superduperdb"})," is much-much more than vector-search\non text. Explore the docs to read about classical machine learning,\ncomputer vision, LLMs, fine-tuning and much much more!"]})]}),"\n",(0,r.jsx)(n.p,{children:"To check that everything is working correctly cut and paste this code into a Jupyter notebook,\nscript or IPython session."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import json\nimport requests \n\nfrom superduperdb import Stack, Document, VectorIndex, Listener, vector, superduper\nfrom superduperdb.ext.sentence_transformers.model import SentenceTransformer\nfrom superduperdb.backends.mongodb import Collection\n\nr = requests.get('https://superduperdb-public-demo.s3.amazonaws.com/text.json')\n\nwith open('text.json', 'wb') as f:\n    f.write(r.content)\n\nwith open('text.json', 'r') as f:\n    data = json.load(f)        \n\ndb = superduper('mongomock://test')\n\ndb.execute(\n    Collection('documents').insert_many([Document({'txt': r}) for r in data])\n)\n\ndatatype = vector(shape=384, identifier=\"my-vec\")\n\nmodel = SentenceTransformer(\n    identifier=\"test\",\n    datatype=datatype,\n    predict_kwargs={\"show_progress_bar\": True},\n    signature=\"*args,**kwargs\",\n    model=\"all-MiniLM-L6-v2\",\n    device=\"cpu\",\n    postprocess=lambda x: x.tolist(),\n)\n\nlistener = Listener(\n    identifier=\"my-listener\",\n    key=\"txt\",\n    model=model,\n    select=Collection('documents').find(),\n    active=True,\n    predict_kwargs={}\n)\n\nvector_index = VectorIndex(\n    identifier=\"my-index\",\n    indexing_listener=listener,\n    measure=\"cosine\"\n)\n\ndb.apply(vector_index)\n\nprint(db.execute(\n    Collection('documents')\n        .like({'txt': 'Tell me about vector-indexes'}, vector_index='my-index')\n        .find_one()\n))\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["If this doesn't work then something is wrong \ud83d\ude49 - please report ",(0,r.jsx)(n.a,{href:"https://github.com/SuperDuperDB/superduperdb/issues",children:"an issue on GitHub"}),"."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["This example deploys a vector-index with a model we have chosen and self-hosted,\non some text-data (",(0,r.jsx)(n.code,{children:"superduperdb"})," documentation). The single execution\n",(0,r.jsx)(n.code,{children:"db.apply"})," sets everything up, and the ",(0,r.jsx)(n.code,{children:"db.execute"})," call, executes a vector-search\nquery-by-meaning. All of the parts ",(0,r.jsx)(n.code,{children:"model"}),", ",(0,r.jsx)(n.code,{children:"listener"}),", ",(0,r.jsx)(n.code,{children:"data"}),", ",(0,r.jsx)(n.code,{children:"vector_index"}),"\nare fully configurable and adaptable to your application's needs.\nRead more in the main documentation!"]})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);