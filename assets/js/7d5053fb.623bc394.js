"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[9805],{122:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var t=i(4848),o=i(8453);const s={},r="Execute API",c={id:"docs/execute_api/overview",title:"Execute API",description:"SuperDuperDB implements 2 main classes of db.databackend:",source:"@site/content/docs/execute_api/overview.md",sourceDirName:"docs/execute_api",slug:"/docs/execute_api/overview",permalink:"/docs/docs/execute_api/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/docs/execute_api/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Trainer",permalink:"/docs/docs/apply_api/trainer"},next:{title:"Data inserts",permalink:"/docs/docs/execute_api/inserting_data"}},d={},a=[{value:"PyMongo",id:"pymongo",level:2},{value:"Ibis",id:"ibis",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"execute-api",children:"Execute API"}),"\n",(0,t.jsxs)(n.p,{children:["SuperDuperDB implements 2 main classes of ",(0,t.jsx)(n.code,{children:"db.databackend"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../data_integrations/mongodb",children:"MongoDB"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../data_integrations/sql",children:"SQL backends"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Correspondingly, SuperDuperDB currently has 2 flavours of query API:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"pymongo"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ibis"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pymongo",children:"PyMongo"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"pymongo"})," is the official MongoDB client for Python. It supports\ncompositional queries, leveraging the BSON format for encoding\nand retrieving data."]}),"\n",(0,t.jsx)(n.h2,{id:"ibis",children:"Ibis"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ibis"})," is a Python library with a uniform compositional approach to building\nSQL queries. It communicates with the ",(0,t.jsx)(n.code,{children:"db.databackend"})," using ",(0,t.jsx)(n.code,{children:"pandas"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);